name: ci-systemd-release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag which has to be updated"
        type: "string"
        required: true
  push:
    tags:
      - "*"

# Declare default permissions as read only.
permissions: read-all

jobs:
  goreleaser:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - arch: amd64
            os: ubuntu-22.04
          - arch: arm64
            os: ubuntu-22.04-arm
    if: github.repository == 'kubearmor/kubearmor'
    permissions:
      id-token: write # requires for cosign keyless signing
      contents: write # requires for goreleaser to write to GitHub release
    steps:
      - name: Validate version
        id: validate
        uses: actions/github-script@v7
        with:
          script: |
            const Regex = /^v([0-9]+)\.([0-9]+)\.([0-9]+)$/;
            const eventName = '${{ github.event_name }}';
            let version;

            if (eventName === 'push') {
              version = '${{ github.ref_name }}';
            } else {
              version = '${{ inputs.tag }}';
            }

            if (!Regex.test(version)) {
              console.log(`Invalid version format: ${version}`);
              core.setFailed(`Invalid version format: ${version}`);
            } else {
              console.log(`Valid version format: ${version}`);
              // Set the validated version as an output for other steps
              core.setOutput('release_tag', version);
            }

      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'KubeArmor/go.mod'

      - name: Install the latest LLVM toolchain
        run: ./.github/workflows/install-llvm.sh

      - name: Compile libbpf
        run: ./.github/workflows/install-libbpf.sh

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Install karmor
        run: curl -sfL https://raw.githubusercontent.com/kubearmor/kubearmor-client/main/install.sh | sudo sh -s -- -b .
        working-directory: KubeArmor

      - name: Build KubeArmor object files
        run: make
        working-directory: KubeArmor/BPF

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Prepare environment from validated tag
        id: vars
        run: |
          # Use the validated release tag from the previous step
          RELEASE_TAG="${{ steps.validate.outputs.release_tag }}"
          echo "Using release tag: ${RELEASE_TAG}"

          echo "GORELEASER_CURRENT_TAG=${RELEASE_TAG}" >> $GITHUB_OUTPUT

          echo "tag=${RELEASE_TAG#v}" >> $GITHUB_OUTPUT

          cp KubeArmor/.goreleaser.yaml /tmp/.goreleaser.yaml

          # For manual dispatch -- checkout that particular tag
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Checking out tag: ${RELEASE_TAG}"
            git checkout "${RELEASE_TAG}"
          fi

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_${{ matrix.arch }} -O /usr/local/bin/yq &&\
          chmod +x /usr/local/bin/yq
          yq --version

      - name: Patch goarch
        working-directory: KubeArmor
        run: |
           yq -i '.builds[0].goarch = ["${{ matrix.arch }}"]' /tmp/.goreleaser.yaml

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: v1.25.0
          args: release --config=/tmp/.goreleaser.yaml
          workdir: KubeArmor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ steps.vars.outputs.GORELEASER_CURRENT_TAG }}
          ARCH: ${{ matrix.arch }}

      - name: Setup ORAS
        uses: oras-project/setup-oras@v1
        with:
          version: 1.0.0

      - name: Publish release artifacts to Dockerhub
        working-directory: KubeArmor/dist
        run: |
          oras push docker.io/kubearmor/kubearmor-systemd:${{ steps.vars.outputs.tag }}_linux-${{ matrix.arch }} kubearmor_${{ steps.vars.outputs.tag }}_linux-${{ matrix.arch }}.tar.gz
